pool:
  vmImage: ubuntu-latest

variables:
  - name: imageTag
    value: ${{ replace(variables['Build.SourceBranch'],'refs/tags/','') }}
  - name: isTagBuild
    value: ${{ startsWith(variables['Build.SourceBranch'],'refs/tags/') }}
  - name: azureContainerRegistryConnection
    value: Keboola ACR
  - name: azureContainerRegistry
    value: keboola.azurecr.io
  - name: imageRepository_base
    value: docker-custom-python
  - name: imageRepository_mlflow
    value: docker-python-mlflow
  - name: imageRepository_databricks
    value: docker-python-databricks

trigger:
  - refs/tags/*

steps:
  - script: docker info
    displayName: Info

  - script: echo '##vso[task.setvariable variable=imageTag]$(Build.BuildId)'
    displayName: Set the imageTag to buildId if it's not a tag build
    condition: eq(variables['isTagBuild'], 'false')

  - script: docker build -t docker-custom-python .
    displayName: Build Docker image

  - task: Docker@2
    displayName: Login to ACR
    inputs:
      command: login
      containerRegistry: $(azureContainerRegistryConnection)
    condition: eq(variables['isTagBuild'], 'true')

# Push base image
  - script: |
      set -Eeuo pipefail
      docker login -u="$(QUAY_USERNAME)" -p="$(QUAY_PASSWORD)" quay.io
      docker tag docker-custom-python quay.io/keboola/$(imageRepository_base):$(imageTag)
      docker tag docker-custom-python quay.io/keboola/$(imageRepository_base):latest
      docker push -a quay.io/keboola/$(imageRepository_base)
    condition: eq(variables['isTagBuild'], 'true')
    displayName: Push $(imageRepository_base) to quay.io

  - script: |
      set -Eeuo pipefail
      docker tag docker-custom-python $(azureContainerRegistry)/$(imageRepository_base):$(imageTag)
      docker push -a $(azureContainerRegistry)/$(imageRepository_base)
    displayName: Push $(imageRepository_base) to ACR
    condition: eq(variables['isTagBuild'], 'true')

# Push MLFlow
  - task: ECRPushImage@1
    inputs:
      awsCredentials: Production - ECR Distribution - MLFlow
      regionName: us-east-1
      repositoryName: keboola/$(imageRepository_mlflow)
      sourceImageName: docker-custom-python
      pushTag: $(imageTag)
    displayName: Push $(imageRepository_mlflow) to ECR
    condition: eq(variables['isTagBuild'], 'true')

  - script: |
      set -Eeuo pipefail
      docker tag docker-custom-python $(azureContainerRegistry)/$(imageRepository_mlflow):$(imageTag)
      docker push -a $(azureContainerRegistry)/$(imageRepository_mlflow)
    displayName: Push $(imageRepository_mlflow) to ACR
    condition: eq(variables['isTagBuild'], 'true')

# Push Databricks
  - script: |
      set -Eeuo pipefail
      docker tag docker-custom-python $(azureContainerRegistry)/$(imageRepository_databricks):$(imageTag)
      docker push -a $(azureContainerRegistry)/$(imageRepository_databricks)
    displayName: Push $(imageRepository_databricks) to ACR
    condition: eq(variables['isTagBuild'], 'true')

# Publish the latest tag info
  - script: printf "%s" "$(imageTag)" > base-python-artifact
    condition: eq(variables['isTagBuild'], 'true')
    displayName: Create artifact

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'base-python-artifact'
      artifact: 'keboola.docker-custom-python.latest-build'
    condition: eq(variables['isTagBuild'], 'true')
    displayName: 'Publish Tag Artifact'
